server:
  port: '${server.port}'

management:
  security:
    flag: false
  server:
    port: '${management.port}'
  metrics:
    export:
      prometheus:
        enabled: true
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health,info,prometheus

spring:
  application:
    name: '@project.name@'
  output:
    ansi:
      enabled: always
  elasticsearch:
    uris: "http://localhost:9200"
  kafka:
    bootstrap-servers: localhost:9092
    client-id: deanonimus
    consumer:
      group-id: "DeanonimusListener"
      enable-auto-commit: false
      auto-offset-reset: earliest
      max-poll-records: 20
      properties:
        max.poll.interval.ms: 30000
        session.timeout.ms: 30000

opensearch:
  hostname: "localhost"
  port: 9200

info:
  version: '@project.version@'
  stage: dev

data:
  response:
    limit: 25

kafka:
  consumer:
    party-management:
      concurrency: 7
  topics:
    party-management:
      id: mg-events-party
      enabled: false
      consumer.group-id: "DeanonimusListenerPartyManagement"
